#!/usr/bin/env ruby
#
#
# Deploy script for DUBwise
# (cc) 2009 Marcus -Ligi- Bueschleb
# mail to ligi attttt ligi dotttt de
#
#

require 'net/sftp'
require 'highline/import'

host='78.46.192.125'
user='s4m'

path="/home/s4m/rails/www_en/public/ligi/dubwise_dl"

pwd= ask("Enter password #{user}@#{host}:  " ) { |q| q.echo = "*" }  



Net::SFTP.start(host, user, :password => pwd) do |sftp|
  p "testing conn"
end



build=ARGV.include?("-b")
j2me= ARGV.include?("-j2me")
wm= ARGV.include?("-wm")



if build
  p "building j2me"
  system "./BUILD all tmp_deploy -o -z"

  p "building WM"
  system "./WM_BUILD"
end

if j2me
Net::SFTP.start(host, user, :password => pwd) do |sftp|
  p "uploading"
  sftp.upload!("tmp_deploy.7z" , "#{path}/new.7z")
  sftp.upload!("version" , "#{path}/version")
end

  p "extracting j2me"
  Net::SSH.start(host, user, :password => pwd) do |ssh|
    p ssh.exec!("cd #{path} ; mkdir new_trunk ; mv version new_trunk ;  mv new.7z new_trunk; cd new_trunk ; 7zr e new.7z ; rm new_.7z ; cd .. ; mv trunk old_trunk ; mv new_trunk trunk ; rm -rf old_trunk")
  end
end

if wm
  Net::SFTP.start(host, user, :password => pwd) do |sftp|
    p "uploading wm"
    sftp.upload!("wm_tmp/240x320.zip" , "#{path}/trunk/240x320.zip")
    sftp.upload!("wm_tmp/340x400.zip" , "#{path}/trunk/340x400.zip")
    sftp.upload!("wm_tmp/480x640.zip" , "#{path}/trunk/480x640.zip")

  end
end

p "anouncing the new version"

3.times { # repeating is needed sometimes with appengine ;-)
  p `curl http://dubwise-download.appspot.com/refresh_download_source`
}
